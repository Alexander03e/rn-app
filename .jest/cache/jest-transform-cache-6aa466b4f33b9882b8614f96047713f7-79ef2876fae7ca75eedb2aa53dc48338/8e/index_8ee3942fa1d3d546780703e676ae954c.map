{"version":3,"names":["Object","defineProperty","exports","value","default","TestEnvironment","_vm","data","require","_fakeTimers","_jestMock","_jestUtil","denyList","Set","nodeGlobals","Map","getOwnPropertyNames","globalThis","filter","global","has","map","nodeGlobalsKey","descriptor","getOwnPropertyDescriptor","Error","isString","NodeEnvironment","context","fakeTimers","fakeTimersModern","moduleMocker","customExportConditions","_configuredExportConditions","constructor","config","_context","projectConfig","createContext","runInContext","assign","testEnvironmentOptions","contextGlobals","configurable","enumerable","get","writable","set","Buffer","ArrayBuffer","Uint8Array","installCommonGlobals","globals","stackTraceLimit","Array","isArray","every","ModuleMocker","timerIdToRef","id","ref","unref","timerRefToId","timer","LegacyFakeTimers","timerConfig","idToRef","refToId","ModernFakeTimers","setup","teardown","dispose","exportConditions","getVmContext"],"sources":["index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = exports.TestEnvironment = void 0;\nfunction _vm() {\n  const data = require('vm');\n  _vm = function () {\n    return data;\n  };\n  return data;\n}\nfunction _fakeTimers() {\n  const data = require('@jest/fake-timers');\n  _fakeTimers = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestMock() {\n  const data = require('jest-mock');\n  _jestMock = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestUtil() {\n  const data = require('jest-util');\n  _jestUtil = function () {\n    return data;\n  };\n  return data;\n}\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// some globals we do not want, either because deprecated or we set it ourselves\nconst denyList = new Set([\n  'GLOBAL',\n  'root',\n  'global',\n  'globalThis',\n  'Buffer',\n  'ArrayBuffer',\n  'Uint8Array',\n  // if env is loaded within a jest test\n  'jest-symbol-do-not-touch'\n]);\nconst nodeGlobals = new Map(\n  Object.getOwnPropertyNames(globalThis)\n    .filter(global => !denyList.has(global))\n    .map(nodeGlobalsKey => {\n      const descriptor = Object.getOwnPropertyDescriptor(\n        globalThis,\n        nodeGlobalsKey\n      );\n      if (!descriptor) {\n        throw new Error(\n          `No property descriptor for ${nodeGlobalsKey}, this is a bug in Jest.`\n        );\n      }\n      return [nodeGlobalsKey, descriptor];\n    })\n);\nfunction isString(value) {\n  return typeof value === 'string';\n}\nclass NodeEnvironment {\n  context;\n  fakeTimers;\n  fakeTimersModern;\n  global;\n  moduleMocker;\n  customExportConditions = ['node', 'node-addons'];\n  _configuredExportConditions;\n\n  // while `context` is unused, it should always be passed\n  constructor(config, _context) {\n    const {projectConfig} = config;\n    this.context = (0, _vm().createContext)();\n    const global = (0, _vm().runInContext)(\n      'this',\n      Object.assign(this.context, projectConfig.testEnvironmentOptions)\n    );\n    this.global = global;\n    const contextGlobals = new Set(Object.getOwnPropertyNames(global));\n    for (const [nodeGlobalsKey, descriptor] of nodeGlobals) {\n      if (!contextGlobals.has(nodeGlobalsKey)) {\n        if (descriptor.configurable) {\n          Object.defineProperty(global, nodeGlobalsKey, {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            get() {\n              const value = globalThis[nodeGlobalsKey];\n\n              // override lazy getter\n              Object.defineProperty(global, nodeGlobalsKey, {\n                configurable: true,\n                enumerable: descriptor.enumerable,\n                value,\n                writable: true\n              });\n              return value;\n            },\n            set(value) {\n              // override lazy getter\n              Object.defineProperty(global, nodeGlobalsKey, {\n                configurable: true,\n                enumerable: descriptor.enumerable,\n                value,\n                writable: true\n              });\n            }\n          });\n        } else if ('value' in descriptor) {\n          Object.defineProperty(global, nodeGlobalsKey, {\n            configurable: false,\n            enumerable: descriptor.enumerable,\n            value: descriptor.value,\n            writable: descriptor.writable\n          });\n        } else {\n          Object.defineProperty(global, nodeGlobalsKey, {\n            configurable: false,\n            enumerable: descriptor.enumerable,\n            get: descriptor.get,\n            set: descriptor.set\n          });\n        }\n      }\n    }\n\n    // @ts-expect-error - Buffer and gc is \"missing\"\n    global.global = global;\n    global.Buffer = Buffer;\n    global.ArrayBuffer = ArrayBuffer;\n    // TextEncoder (global or via 'util') references a Uint8Array constructor\n    // different than the global one used by users in tests. This makes sure the\n    // same constructor is referenced by both.\n    global.Uint8Array = Uint8Array;\n    (0, _jestUtil().installCommonGlobals)(global, projectConfig.globals);\n\n    // Node's error-message stack size is limited at 10, but it's pretty useful\n    // to see more than that when a test fails.\n    global.Error.stackTraceLimit = 100;\n    if ('customExportConditions' in projectConfig.testEnvironmentOptions) {\n      const {customExportConditions} = projectConfig.testEnvironmentOptions;\n      if (\n        Array.isArray(customExportConditions) &&\n        customExportConditions.every(isString)\n      ) {\n        this._configuredExportConditions = customExportConditions;\n      } else {\n        throw new Error(\n          'Custom export conditions specified but they are not an array of strings'\n        );\n      }\n    }\n    this.moduleMocker = new (_jestMock().ModuleMocker)(global);\n    const timerIdToRef = id => ({\n      id,\n      ref() {\n        return this;\n      },\n      unref() {\n        return this;\n      }\n    });\n    const timerRefToId = timer => timer?.id;\n    this.fakeTimers = new (_fakeTimers().LegacyFakeTimers)({\n      config: projectConfig,\n      global,\n      moduleMocker: this.moduleMocker,\n      timerConfig: {\n        idToRef: timerIdToRef,\n        refToId: timerRefToId\n      }\n    });\n    this.fakeTimersModern = new (_fakeTimers().ModernFakeTimers)({\n      config: projectConfig,\n      global\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async setup() {}\n  async teardown() {\n    if (this.fakeTimers) {\n      this.fakeTimers.dispose();\n    }\n    if (this.fakeTimersModern) {\n      this.fakeTimersModern.dispose();\n    }\n    this.context = null;\n    this.fakeTimers = null;\n    this.fakeTimersModern = null;\n  }\n  exportConditions() {\n    return this._configuredExportConditions ?? this.customExportConditions;\n  }\n  getVmContext() {\n    return this.context;\n  }\n}\nexports.default = NodeEnvironment;\nconst TestEnvironment = NodeEnvironment;\nexports.TestEnvironment = TestEnvironment;\n"],"mappings":"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","ignoreList":[]}